{"version":3,"sources":["components/Cabecalho.js","pages/Inicio.js","components/Rodape.js","constants/config.js","pages/Moveis.js","pages/Integrantes.js","pages/FAQ.js","pages/Manual.js","routes/Rotas.js","App.js","index.js"],"names":["Cabecalho","Navbar","bg","variant","Brand","href","Nav","className","Link","DropdownButton","as","ButtonGroup","menuAlign","lg","title","id","Dropdown","Item","eventKey","Inicio","useEffect","document","Container","fluid","Jumbotron","class","Button","size","block","src","width","height","Rodape","fixed","BACKEND","Moveis","valorInicial","nomeMovel","lugar","cor","tamanho","valor","useState","movel","setMovel","moveis","setMoveis","carregandoMoveis","setCarregandoMoveis","salvandoMoveis","setSalvandoMoveis","confirmaExclusao","setConfirmaExclusao","aviso","setAviso","erros","setErros","obterMoveis","a","url","fetch","then","response","json","data","console","log","catch","error","message","validaErrosMÃ³veis","novosErros","length","alteraDadosMoveis","e","target","name","value","preventDefault","Object","keys","metodo","hasOwnProperty","method","headers","Accept","body","JSON","stringify","_id","Row","Col","xs","Form","Group","controlId","Label","Control","placeholder","onChange","isInvalid","Feedback","type","onClick","salvarMovel","Spinner","animation","Table","striped","bordered","hover","map","item","Date","createdAt","toLocaleDateString","colspan","Modal","show","onHide","Header","Title","Body","Footer","excluirMovel","Toast","onClose","delay","autohide","style","position","top","right","classname","Integrantes","alt","FAQ","Manual","Rotas","exact","path","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f09dda27.chunk.js","sourcesContent":["import React from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport {GiSofa} from \"react-icons/gi\"\n\nimport { MdDescription, MdStore, MdHome,\nMdMailOutline, MdAccountCircle } from 'react-icons/md'\n\nconst Cabecalho = () => {\n\n    return (\n<Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#inicio\" ><GiSofa/> PlanMo</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n    \n      <Nav.Link href=\"#contato\"><MdMailOutline/> Contato</Nav.Link>\n      <DropdownButton \n        as={ButtonGroup}\n        menuAlign={{ lg: 'right'}}\n        title=\"OpÃ§Ãµes\"\n        id=\"cadastros\"\n        bg=\"dark\" variant=\"dark\">\n            <Dropdown.Item eventKey=\"1\" href=\"#/moveis\"><GiSofa/> Meus MÃ³veis</Dropdown.Item>\n            <Dropdown.Item eventKey=\"2\" href=\"#/integrantes\"><MdAccountCircle /> Integrantes</Dropdown.Item>\n            <Dropdown.Item eventKey=\"3\" href=\"#/FAQ\"><MdDescription/>FAQ</Dropdown.Item>\n          \n        </DropdownButton>\n    </Nav>\n  </Navbar>\n    )\n}\n\nexport default Cabecalho","import React, { useEffect } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Figure from 'react-bootstrap/Figure'\n\n\nimport Cabecalho from '../components/Cabecalho'\n\n\nconst Inicio = () => {\n\n    useEffect(() => {\n        document.title = 'PlanMo'\n    }, [])\n\n    return (\n        <>\n            <Container fluid className=\"p-0\">\n                <Cabecalho />\n\n\n                <Jumbotron>\n                    <h1 class=\"text-center font-weight-bold\">Bem vindo ao planejamento de mÃ³veis!</h1>\n                    <p class=\"text-center font-weight-bold\">\n                        Aqui, vocÃª define os mÃ³veis desejados em cada cÃ´modo!\n                    </p>\n\n                </Jumbotron>\n                <Button className=\"font-weight-bold\"\n                    variant=\"danger\"  \n                    size= \"lg\"                \n                    block href=\"#/moveis\">\n                    Vamos comeÃ§ar!\n  </Button>\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n\n                <img src=\"https://upload.hicoria.com/files/jkMqSjGK.png\"\n                    width={1100}\n                    height={100}\n                    class=\"rounded mx-auto d-block\">\n\n                </img>\n            </Container>\n        </>\n    )\n}\n\nexport default Inicio","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport {GiSofa} from \"react-icons/gi\"\n\nconst Rodape = () => {\n    return (\n<Navbar bg=\"dark\" fixed=\"bottom\">\n    <Navbar.Brand href=\"#inicio\" className=\"text-light\">\n        <GiSofa/> PlanMo &copy; - Todos os direitos reservados\n    </Navbar.Brand>\n</Navbar>\n    )\n}\n\nexport default Rodape","export const BACKEND = \"http://localhost:4000\"\n\nconst config = { BACKEND }\n\nexport default config","import React, { useEffect, useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Table from 'react-bootstrap/Table'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\n\nimport Cabecalho from '../components/Cabecalho'\nimport Rodape from '../components/Rodape'\nimport { BACKEND } from '../constants'\nimport {GiSofa} from \"react-icons/gi\"\nimport { MdRestaurantMenu, MdWeb, MdSave, MdModeEdit, MdDelete, MdCancel } from 'react-icons/md'\nimport { unmountComponentAtNode } from 'react-dom'\n\nconst Moveis = () => {\n    const valorInicial = { nomeMovel: '', lugar:'', cor:'', tamanho:'', valor:''}\n\n    const [movel, setMovel] = useState(valorInicial)\n    const [moveis, setMoveis] = useState([])\n    const [carregandoMoveis, setCarregandoMoveis] = useState(false)\n    const [salvandoMoveis, setSalvandoMoveis] = useState(false)\n    const [confirmaExclusao, setConfirmaExclusao] = useState(false)\n\n    const [aviso, setAviso] = useState('')\n    const [erros, setErros] = useState({})\n\n    const { nomeMovel, lugar, cor, tamanho, valor } = movel\n\n    async function obterMoveis() {\n        setCarregandoMoveis(true)\n        let url = `${BACKEND}/moveis`\n        await fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                setMoveis(data)\n                console.log(data)\n            })\n            .catch(function (error) {\n                console.error(`Erro ao obter as categorias: ${error.message}`)\n            })\n        setCarregandoMoveis(false)\n\n    }\n\n    useEffect(() => {\n        document.title = 'Seus MÃ³veis!'\n        obterMoveis()\n    }, [])\n\n    const validaErrosMÃ³veis = () => {\n        const novosErros = {}\n        //ValidaÃ§Ã£o de Nome\n        if (! nomeMovel || nomeMovel === '') novosErros.nomeMovel = 'O nome nÃ£o pode ser vazio'\n        else if (nomeMovel.length > 30) novosErros.nomeMovel = 'O nome informado Ã© muito longo'\n        else if (nomeMovel.length < 3) novosErros.nomeMovel = 'O nome informado Ã© muito curto'\n        return novosErros\n    }\n\n    const alteraDadosMoveis = e => {\n        setMovel({ ...movel, [e.target.name]: e.target.value })\n        setErros({})\n    }\n\n    async function salvarMovel(e) {\n        e.preventDefault() // evita que a pÃ¡gina seja recarregada  \n        const novosErros = validaErrosMÃ³veis()\n        //Existe algum erro no array?\n        if (Object.keys(novosErros).length > 0) {\n            //Sim, temos erros!\n            setErros(novosErros)\n        } else {\n            const metodo = movel.hasOwnProperty('_id') ? 'PUT' : 'POST'\n            setSalvandoMoveis(true)\n            let url = `${BACKEND}/moveis`\n            await fetch(url, {\n                method: metodo,\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(movel)\n            }).then(response => response.json())\n                .then(data => {\n                    (data._id || data.message) ? setAviso('Registro salvo com sucesso') : setAviso('')\n                    setMovel(valorInicial)\n                    obterMoveis()\n                }).catch(function (error) {\n                    console.error(`Erro ao salvar a categoria: ${error.message}`)\n                })\n            setSalvandoMoveis(false)\n        }\n    }\n\n    async function excluirMovel() {\n        let url = `${BACKEND}/moveis/${movel._id}`\n        await fetch(url, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(response => response.json())\n            .then(data => {\n                data.message ? setAviso(data.message) : setAviso('')\n                setMovel(valorInicial)\n                obterMoveis()\n            })\n            .catch(function (error) {\n                console.error(`Erro ao excluir a categoria: ${error.message}`)\n            })\n    }\n\n    return (\n        <>\n            <Container fluid className=\"p-0 \">\n                <Cabecalho />\n                <Row className=\"bg-danger text-light\">\n                    <Col>\n                        <h3 className=\"text-center\"><GiSofa /> Lista de MÃ³veis!</h3>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} lg={6}>\n                        {/* FormulÃ¡rio das Categorias */}\n                        <h4><MdWeb /> Registro do mÃ³vel (favor, antes de utilizar verificar o <Button href=\"#/manual\" >Manual</Button> ) </h4>\n                        <Form method=\"post\">\n                            <Form.Group controlId=\"nomeMovel\">\n                                <Form.Label>Nome da Categoria</Form.Label>\n                                <Form.Control\n                                    name=\"nomeMovel\"\n                                    placeholder=\"Ex: Sofa\"\n                                    onChange={alteraDadosMoveis}\n                                    value={nomeMovel}\n                                    isInvalid={!!erros.nomeMovel}\n                                />\n                                <Form.Control.Feedback type='invalid'>\n                                    {erros.nomeMovel}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                          \n                         {/*  Registro comodo */}\n                         <Form method=\"post\">\n                            <Form.Group controlId=\"lugar\">\n                                <Form.Label>Qual cÃ´modo o mÃ³vel ficarÃ¡?</Form.Label>\n                                <Form.Control\n                                    name=\"lugar\"\n                                    placeholder=\"Ex: Quarto\"\n                                    onChange={alteraDadosMoveis}\n                                    value={lugar}\n                                    isInvalid={!!erros.lugar}\n                                />\n                                <Form.Control.Feedback type='invalid'>\n                                    {erros.lugar}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                          </Form>\n\n                            {/*  Registro Cor */}\n                         <Form method=\"post\">\n                            <Form.Group controlId=\"cor\">\n                                <Form.Label>Qual a cor do mÃ³vel?</Form.Label>\n                                <Form.Control\n                                    name=\"cor\"\n                                    placeholder=\"Ex: Preto\"\n                                    onChange={alteraDadosMoveis}\n                                    value={cor}\n                                    isInvalid={!!erros.cor}\n                                />\n                                <Form.Control.Feedback type='invalid'>\n                                    {erros.cor}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                          </Form> \n\n                                  {/*  Registro tamanho */}\n                         <Form method=\"post\">\n                            <Form.Group controlId=\"tamanho\">\n                                <Form.Label>Qual o tamanho do mÃ³vel?</Form.Label>\n                                <Form.Control\n                                    name=\"tamanho\"\n                                    placeholder=\"Ex: Grande\"\n                                    onChange={alteraDadosMoveis}\n                                    value={tamanho}\n                                    isInvalid={!!erros.tamanho}\n                                />\n                                <Form.Control.Feedback type='invalid'>\n                                    {erros.tamanho}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                          </Form> \n\n                          {/*  Registro valor */}\n                          <Form method=\"post\">\n                            <Form.Group controlId=\"valor\">\n                                <Form.Label>Qual o valor mÃ©dio do mÃ³vel?</Form.Label>\n                                <Form.Control\n                                    name=\"valor\"\n                                    placeholder=\"Ex: 215\"\n                                    onChange={alteraDadosMoveis}\n                                    value={valor}\n                                    isInvalid={!!erros.valor}\n                                />\n                                <Form.Control.Feedback type='invalid'>\n                                    {erros.valor}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                          </Form> \n\n\n\n\n                            <Button variant=\"primary \" type=\"submit\" title=\"Salvar o registro\"\n                                onClick={(e) => salvarMovel(e)}>\n                                {salvandoMoveis\n                                    ? <Spinner animation=\"border\" size=\"sm\" />\n                                    : <MdSave />\n                                }\n                                Salvar\n                            </Button>\n                            &nbsp;\n                            \n                        </Form>\n                    </Col>\n                    <Col xs={12} lg={6}>\n                        {/* Listagem das Categorias */}\n                        {carregandoMoveis &&\n                            <>\n                                <Spinner animation=\"border\" size=\"sm\" />\n                                <Spinner animation=\"grow\" variant=\"info\" />\n                                <p>Aguarde, enquanto as categorias sÃ£o carregadas...</p>\n                            </>\n                        }\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr className=\"bg-dark text-light\">\n                                    <th>MÃ³vel</th>\n                                    <th>Comodo</th>\n                                    <th>Cor</th>\n                                    <th>Tamanho</th>\n                                    <th>Valor</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {moveis.map(item => (\n                                    <tr key={item._id}>\n                                        <td>{item.nomeMovel}</td>\n                                        <td>{item.lugar}</td>\n                                        <td>{item.cor}</td>\n                                        <td>{item.tamanho}</td>\n                                        <td>{item.valor}</td>\n                                        <td>{new Date(item.createdAt).toLocaleDateString()}</td>\n                                        <td>\n                                            <Button variant=\"outline-primary\" title=\"Editar o registro\"\n                                                onClick={() => setMovel(item)}>\n                                                <MdModeEdit />\n                                            </Button>\n                                            &nbsp;\n                                            <Button variant=\"outline-danger\" title=\"Apagar o registro\"\n                                                onClick={() => {\n                                                    setMovel(item)\n                                                    setConfirmaExclusao(true)\n                                                }} >\n                                                <MdDelete />\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                                <tr className=\"bg-dark text-light\">\n                                    <td colspan=\"3\">Total de Registros:</td>\n                                    <td>{moveis.length}</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n                <Modal animation={false} show={confirmaExclusao} onHide={() => setConfirmaExclusao(false)}>\n                    <Modal.Header>\n                        <Modal.Title>ConfirmaÃ§Ã£o da ExclusÃ£o</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Confirma a exclusÃ£o da categoria selecionada?\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={() => setConfirmaExclusao(!confirmaExclusao)}>\n                            âCancelar\n                            </Button>\n                        <Button variant=\"success\"\n                            onClick={() => {\n                                setConfirmaExclusao(!confirmaExclusao)\n                                excluirMovel()\n                            }}>\n                            âï¸Confirmar\n                            </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Toast\n                    onClose={() => setAviso('')}\n                    show={aviso.length > 0}\n                    animation={false}\n                    delay={4000}\n                    autohide\n                    className=\"bg-success\"\n                    style={{\n                        position: 'absolute',\n                        top: 10,\n                        right: 10\n                    }}>\n                    <Toast.Header>Aviso</Toast.Header>\n                    <Toast.Body classname=\"text-light\">{aviso}</Toast.Body>\n                </Toast>\n\n               \n            </Container>\n        </>\n    )\n}\n\nexport default Moveis","import React, { useEffect } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Figure from 'react-bootstrap/Figure'\n\n\nimport Cabecalho from '../components/Cabecalho'\n\n\nconst Integrantes = () => {\n\n    useEffect(() => {\n        document.title = 'Integrantes'\n    }, [])\n\n    return (\n        <>\n            <Container fluid className=\"p-0 my-3 bg-dark text-white\" >\n                <Cabecalho />\n                <br/>\n                <br/>\n                <img src=\"https://upload.hicoria.com/files/ZYq4H7Ts.jpg\"\n                 alt=\"Felipe\" \n                 class=\"rounded-circle mx-auto d-block border border-light\"\n                 width={210}\n                 height={200}></img>\n                <h1 class=\"text-center font-weight-bold\">Felipe Eduardo de Souza Honorato</h1>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <img src=\"https://upload.hicoria.com/files/KNhA4EWB.jpg\"\n                 alt=\"Felipe\" \n                 class=\"rounded-circle mx-auto d-block border border-light\"\n                 width={210}\n                 height={200}></img>\n                <h1 class=\"text-center font-weight-bold\">Kauane do Carmo Almeida</h1>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n               \n            </Container>\n        </>\n    )\n}\n\nexport default Integrantes","import React, { useEffect } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\n\n\n\nimport Cabecalho from '../components/Cabecalho'\nimport Rodape from '../components/Rodape'\n\n\nconst FAQ = () => {\n\n    useEffect(() => {\n        document.title = 'FAQ'\n    }, [])\n\n    return (\n        <>\n            <Container fluid className=\"p-0\">\n                <Cabecalho />\n                <br />\n                <Jumbotron>\n                    <h1 className=\"text-center font-weight-bold\"> Perguntas e respostas!</h1>\n                    <h2 className=\"text-center\"> Aqui, dÃºvidas sobre o projeto sÃ£o esclarecidas!</h2>\n                </Jumbotron>\n                <h3 className=\"text-center font-weight-bold\"> Dificuldades com o projeto?</h3>\n                <h4 className=\"text-center\" > Adaptar o cÃ³digo de maneira que funcione corretamente com o intuito desejado</h4>\n                <br />\n                <br />\n                <h3 className=\"text-center font-weight-bold\"> LimitaÃ§Ã£o do projeto?</h3>\n                <h4 className=\"text-center\" > Por conta da funÃ§Ã£o do projeto, infelizmente nÃ£o conseguimos aprender sobre\n            como fazer para colocar nomes e valores repetidos no mesmo banco de dados</h4>\n                <br />\n                <br />\n                <h3 className=\"text-center font-weight-bold\"> Qual o intuito do projeto??</h3>\n                <h4 className=\"text-center\" > O planejamento de compras de mÃ³veis para cada cÃ´modo\n                se torna comÃºm o uso para quando queremos ou mudar o estilo\n                de nossa residÃªncia\n                ou atÃ© mesmo quando for ocorrer uma mudanÃ§a e queremos redefinir o design interior,\n                logo, mostra-se necessÃ¡rio um meio de armazenar este tipo de conteÃºdo!</h4>\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Rodape></Rodape>\n                \n    \n\n            </Container>\n        </>\n    )\n}\n\nexport default FAQ","import React, { useEffect } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport Figure from 'react-bootstrap/Figure'\n\n\nimport Cabecalho from '../components/Cabecalho'\nimport Rodape from '../components/Rodape'\n\n\nconst Manual = () => {\n\n    useEffect(() => {\n        document.title = 'Manual de uso!'\n    }, [])\n\n    return (\n        <>\n            <Container fluid className=\"p-0\">\n                <Cabecalho />\n                <br />\n                <Jumbotron>\n                    <h1 className=\"text-center font-weight-bold\"> Manual do usuÃ¡rio!</h1>\n                \n                </Jumbotron>\n                <h3 className=\"text-center font-weight-bold\"> Para utilizar , favor no momento, como o projeto estÃ¡ limitado, colocar apenas palavras e valores diferentes\n                atÃ© uma futura atualizaÃ§Ã£o, isto por agora Ã© um teste e deve-se levar em conta a tal limitaÃ§Ã£o atÃ©\n                o momento de aprendizado de uso da funÃ§Ã£o <h4>AGGREGATE</h4> para colocar objetos repetidos\n                no mesmo banco de dados! </h3>\n            \n                <br />\n                <br />\n              \n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Rodape></Rodape>\n                \n    \n\n            </Container>\n        </>\n    )\n}\n\nexport default Manual","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport Inicio from '../pages/Inicio'\nimport Moveis from '../pages/Moveis'\nimport Integrantes from '../pages/Integrantes'\nimport FAQ from '../pages/FAQ'\nimport Manual from '../pages/Manual'\n\n\nexport default function Rotas(){\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/inicio\" component={Inicio} />\n                <Route exact path=\"/\" component={Inicio} />\n                <Route exact path=\"/moveis\" component={Moveis} />\n                <Route exact path=\"/integrantes\" component={Integrantes} />\n                <Route exact path=\"/FAQ\" component={FAQ}/>\n                <Route exact path=\"/manual\" component={Manual}/>\n            </Switch>\n        </HashRouter>   \n    )\n}","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Rotas from './routes/Rotas'\n\nconst App = () => {\n  return (\n    <Rotas />\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}